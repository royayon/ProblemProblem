package LCS;

import java.util.Scanner;

public class LCS {
    static int upArrow = 1;
    static int leftArrow = 2;
    static int diagonalArrow = 3;
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s1 = sc.nextLine();
        String s2 = sc.nextLine();
        int c[][] = new int[s1.length()+1][s2.length()+1];
        int b[][] = new int[s1.length()+1][s2.length()+1];
        System.out.println(LCS(s1, s2, c, b));
        printLCS(b, s1, s1.length(), s2.length());
    }
    static int LCS(String s1, String s2, int c[][], int b[][]){
        int m = s1.length();
        int n = s2.length();
        for(int i= 0; i<=m; i++)
            c[i][0] = 0;
        for(int j= 0; j<=n; j++)
            c[0][j] = 0;
        for(int i = 1; i<=m; i++){
            for(int j = 1; j<=n; j++){
                if(s1.charAt(i-1) == s2.charAt(j-1)){
                    c[i][j] = c[i-1][j-1] + 1;
                    b[i][j] = diagonalArrow;
                }else if(c[i-1][j] >= c[i][j-1]){
                    c[i][j] = c[i-1][j];
                    b[i][j] = upArrow;
                }else{
                    c[i][j] = c[i][j-1];
                    b[i][j] = leftArrow;
                }    
            }
        }
        return c[m][n];
    }
    
    static void printLCS(int b[][], String s1, int i, int j){
        if(i==0 && j==0)
            return;
        if(b[i][j] == diagonalArrow){
            printLCS(b, s1, i-1, j-1);
            System.out.println(s1.charAt(i-1));
        }else if(b[i][j] == upArrow)
            printLCS(b, s1, i-1, j);
        else
            printLCS(b, s1, i, j-1);      
    }
    
    
}
